services:
  api:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.multi
    #   target: api-build
    image: ghcr.io/${GHCR_OWNER}/librechat-dev-api:${IMAGE_TAG:-latest}
    container_name: LibreChat-API
    ports:
      - 3080:3080
    depends_on:
      mongodb:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      rag_api:
        condition: service_healthy
    restart: always
    extra_hosts:
    - "host.docker.internal:host-gateway"
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./librechat.yaml
        target: /app/librechat.yaml
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs
    healthcheck:
      # versucht die API Root zu erreichen, fällt zurück auf TCP wenn curl fehlt
      test: ["CMD-SHELL", "curl -fsS http://localhost:3080/ || nc -z localhost 3080"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s

  mongodb:
    container_name: chat-mongodb
    # ports:  # Uncomment this to access mongodb from outside docker, not safe in deployment
    #   - 27018:27017
    image: mongo
    restart: always
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })' || mongo --eval 'db.runCommand({ ping: 1 })'"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 20s
  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    # ports: # Uncomment this to access meilisearch from outside docker
    #   - 7700:7700 # if exposing these ports, make sure your master key is not the default value
    env_file:
      - .env
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.12:/meili_data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:7700/health || nc -z localhost 7700"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 10s
  vectordb:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || nc -z localhost 5432"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s
  rag_api:
    image: ghcr.io/${GHCR_OWNER}/librechat-rag-api-dev-lite:${IMAGE_TAG:-latest}
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      vectordb:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${RAG_PORT:-8000}/ || nc -z localhost ${RAG_PORT:-8000}"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 15s

volumes:
  pgdata2:
